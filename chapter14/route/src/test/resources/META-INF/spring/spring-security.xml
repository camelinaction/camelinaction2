<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring-security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			   http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
         http://camel.apache.org/schema/spring-security http://camel.apache.org/schema/spring-security/camel-spring-security.xsd">

  <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
    <constructor-arg index="0">
      <list>
        <bean class="org.springframework.security.access.vote.RoleVoter"/>
      </list>
    </constructor-arg>
  </bean>

  <spring-security:authentication-manager alias="authenticationManager">
    <spring-security:authentication-provider user-service-ref="userDetailsService"/>
  </spring-security:authentication-manager>

  <spring-security:user-service id="userDetailsService">
    <!-- use the noop password encoder for testing purpose -->
    <spring-security:user name="jon" password="{noop}secret" authorities="ROLE_USER"/>
    <spring-security:user name="claus" password="{noop}secret" authorities="ROLE_USER, ROLE_ADMIN"/>
  </spring-security:user-service>

  <authorizationPolicy id="admin" access="ROLE_ADMIN"
                       authenticationManager="authenticationManager"
                       accessDecisionManager="accessDecisionManager"
                       xmlns="http://camel.apache.org/schema/spring-security"/>

  <camelContext id="myCamelContext" xmlns="http://camel.apache.org/schema/spring">
    <route>
      <from uri="direct:start"/>
      <to uri="mock:unsecure"/>
      <policy ref="admin">
        <to uri="mock:secure"/>
      </policy>
    </route>
  </camelContext>

</beans>
